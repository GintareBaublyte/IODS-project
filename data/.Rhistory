install.packages("pacman")
library(pacman)
p_load(tidyverse, descr, haven)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
structure(lrn14)
?str
?structure
str(lrn14)
dim(lrn14)
library(MASS)
data("Boston")
str("Boston")
str(data)
library(MASS)
data("Boston")
str(data)
str(Boston)
dim(Boston)
dim(Boston)
str(Boston)
summary(Boston)
?str
str(Boston)
pairs(Boston)
```{r}
pairs(Boston)
var.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Boston)
?pairs
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
plotmatrix(with(Boston))
ggpairs(Boston)
library(ggplot2)
p <- ggpairs(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
p <- ggpairs(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(ggplot2)
p <- ggpairs(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(ggplot2)
p <- ggplot(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
pairs(Boston, main = "Pairs matrix", pch = 21,
bg = c("red", "green3", "blue", "yellow"), upper.panel = NULL)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
summary(Boston)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
cor_matrix<-cor(Boston) %>% round(digits = 2)
library(dplyr)
cor_matrix<-cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot.mixed(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
remove.packages(c("tidyverse", "ggplot2"))
install.packages('tidyverse', dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(tidyverse)
library("tidyverse")
library('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse")
library('tidyverse')
library(MASS)
data("Boston")
dim(Boston)
str(Boston)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
library(dplyr)
install.packages("tidyverse")
library('tidyverse')
cor_matrix <- cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot(cor_matrix)
install.packages("corrplot")
library('corrplot')
cor_matrix <- cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot.mixed(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
corrplot.mixed(cor_matrix, type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
corrplot.mixed(cor_matrix, cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
corrplot.mixed(cor_matrix)
library(dplyr)
install.packages("corrplot")
library('corrplot')
cor_matrix <- cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot.mixed(cor_matrix)
corrplot.mixed(cor_matrix)
cor_matrix <- cor(Boston) %>% round(digits = 2)
cor_matrix
corrplot.mixed(cor_matrix)
corrplot.mixed(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- c(boston_scaled$crim)
summary(scaled_crim)
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
summary(crime)
table(crime)
table(crime)
summary(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crim_cat
test <- dplyr::select(test, -crim_cat)
correct_classes <- test$crim_cat
test <- dplyr::select(test, -crim_cat)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
library(dplyr)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
test <- dplyr::select(test, -test$crime)
correct_classes <- test$crime
test <- dplyr::select(test, -test$crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
library(MASS)
library(dplyr)
library('corrplot')
data("Boston")
library(MASS)
library(dplyr)
library('corrplot')
data("Boston")
dim(Boston)
str(Boston)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot.mixed(cor_matrix)
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- c(boston_scaled$crim)
summary(scaled_crim)
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
library(MASS)
library(dplyr)
library('corrplot')
data("Boston")
dim(Boston)
str(Boston)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot.mixed(cor_matrix)
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- c(boston_scaled$crim)
summary(scaled_crim)
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.arrows(lda.fit, myscale = 5)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 5)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
library(MASS)
library(dplyr)
library('corrplot')
data("Boston")
dim(Boston)
str(Boston)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot.mixed(cor_matrix)
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- c(boston_scaled$crim)
summary(scaled_crim)
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
library(MASS)
library(dplyr)
library('corrplot')
data("Boston")
dim(Boston)
str(Boston)
pairs(Boston, main = "Pairs matrix", upper.panel = NULL)
cor_matrix<-cor(Boston) %>% round(digits = 2)
corrplot.mixed(cor_matrix)
summary(Boston)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
scaled_crim <- c(boston_scaled$crim)
summary(scaled_crim)
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE, label = c("low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
data("Boston")
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
km <- kmeans(dist_eu, centers = 15)
pairs(boston_scaled, col = km$cluster)
pairs(boston_scaled, col = km$cluster, upper = FALSE)
pairs(boston_scaled, col = km$cluster)
set.seed(123)
data("Boston")
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
set.seed(123)
data("Boston")
boston_scaled <- scale(Boston)
summary(boston_scaled)
set.seed(123)
dist_eu <- dist(boston_scaled)
summary(dist_eu)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type = 'b')
km <- kmeans(dist_eu, centers = 2)
pairs(boston_scaled, col = km$cluster)
table(km$cluster, boston_scaled)
ggplot(boston_scaled, aes()) + geom_point()
library(ggplot2)
ggplot(boston_scaled, aes()) + geom_point()
pairs(boston_scaled)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 2)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
str(gii)
dim(hd)
dim(gii)
summary(hd)
summary(gii)
hdnew <- rename(hd, c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI."="hdi", "Life.Expectancy.at.Birth"="lifeexp", "Expected.Years.of.Education"="eduexp", "Mean.Years.of.Education"="edumean", "Gross.National.Income..GNI..per.Capita"="gni", "GNI.per.Capita.Rank.Minus.HDI.Rank"="gnirank"))
giinew <- rename(gii, c("GII.Rank"="rank", "Country"="country", "Gender.Inequality.Index..GII."="gii", "Maternal.Mortality.Ratio"="matmort", "Adolescent.Birth.Rate"="adolbirth", "Percent.Representation.in.Parliament"="repparl", "Population.with.Secondary.Education..Female."="secedfem", "Population.with.Secondary.Education..Male."="secedmal", "Labour.Force.Participation.Rate..Female."="labourfem", "Labour.Force.Participation.Rate..Male."="labourmal"))
?rename
library(dplyr)
hdnew <- rename(hd, c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI."="hdi", "Life.Expectancy.at.Birth"="lifeexp", "Expected.Years.of.Education"="eduexp", "Mean.Years.of.Education"="edumean", "Gross.National.Income..GNI..per.Capita"="gni", "GNI.per.Capita.Rank.Minus.HDI.Rank"="gnirank"))
library(dplyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
summary(hd)
summary(gii)
hdnew <- rename(hd, c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI."="hdi", "Life.Expectancy.at.Birth"="lifeexp", "Expected.Years.of.Education"="eduexp", "Mean.Years.of.Education"="edumean", "Gross.National.Income..GNI..per.Capita"="gni", "GNI.per.Capita.Rank.Minus.HDI.Rank"="gnirank"))
str(hd)
hdnew <- rename(hd, c("HDI.Rank" = "rank", "Country" = "country", "Human.Development.Index..HDI." = "hdi", "Life.Expectancy.at.Birth" = "lifeexp", "Expected.Years.of.Education" = "eduexp", "Mean.Years.of.Education" = "edumean", "Gross.National.Income..GNI..per.Capita" = "gni", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gnirank"))
hdnew <- dplyr::rename(hd, c("HDI.Rank" = "rank", "Country" = "country", "Human.Development.Index..HDI." = "hdi", "Life.Expectancy.at.Birth" = "lifeexp", "Expected.Years.of.Education" = "eduexp", "Mean.Years.of.Education" = "edumean", "Gross.National.Income..GNI..per.Capita" = "gni", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gnirank"))
library(plyr)
library(plyr)
hdnew <- plyr::rename(hd, c("HDI.Rank" = "rank", "Country" = "country", "Human.Development.Index..HDI." = "hdi", "Life.Expectancy.at.Birth" = "lifeexp", "Expected.Years.of.Education" = "eduexp", "Mean.Years.of.Education" = "edumean", "Gross.National.Income..GNI..per.Capita" = "gni", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gnirank"))
names(hdnew)
giinew <- plyr::rename(gii, c("GII.Rank"="rank", "Country"="country", "Gender.Inequality.Index..GII."="gii", "Maternal.Mortality.Ratio"="matmort", "Adolescent.Birth.Rate"="adolbirth", "Percent.Representation.in.Parliament"="repparl", "Population.with.Secondary.Education..Female."="secedfem", "Population.with.Secondary.Education..Male."="secedmal", "Labour.Force.Participation.Rate..Female."="labourfem", "Labour.Force.Participation.Rate..Male."="labourmal"))
names(giinew)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
hdnew <- plyr::rename(hd, c("HDI.Rank" = "rank", "Country" = "country", "Human.Development.Index..HDI." = "hdi", "Life.Expectancy.at.Birth" = "lifeexp", "Expected.Years.of.Education" = "eduexp", "Mean.Years.of.Education" = "edumean", "Gross.National.Income..GNI..per.Capita" = "gni", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gnirank"))
names(hdnew)
giinew <- plyr::rename(gii, c("GII.Rank"="rank", "Country"="country", "Gender.Inequality.Index..GII."="gii", "Maternal.Mortality.Ratio"="matmort", "Adolescent.Birth.Rate"="adolbirth", "Percent.Representation.in.Parliament"="repparl", "Population.with.Secondary.Education..Female."="edu2F", "Population.with.Secondary.Education..Male."="edu2M", "Labour.Force.Participation.Rate..Female."="labourfem", "Labour.Force.Participation.Rate..Male."="labourmal"))
names(giinew)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
giinew <- plyr::rename(gii, c("GII.Rank"="rank", "Country"="country", "Gender.Inequality.Index..GII."="gii", "Maternal.Mortality.Ratio"="matmort", "Adolescent.Birth.Rate"="adolbirth", "Percent.Representation.in.Parliament"="repparl", "Population.with.Secondary.Education..Female."="edu2F", "Population.with.Secondary.Education..Male."="edu2M", "Labour.Force.Participation.Rate..Female."="labF", "Labour.Force.Participation.Rate..Male."="labM"))
names(giinew)
giinew <- mutate(giinew, edu2FM = edu2F/edu2M, labFM = labF/labM)
?inner_join
inner_join(hd, gii, by = "Country")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hdnew <- plyr::rename(hd, c("HDI.Rank" = "rank", "Country" = "country", "Human.Development.Index..HDI." = "hdi", "Life.Expectancy.at.Birth" = "lifeexp", "Expected.Years.of.Education" = "eduexp", "Mean.Years.of.Education" = "edumean", "Gross.National.Income..GNI..per.Capita" = "gni", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gnirank"))
names(hdnew)
giinew <- plyr::rename(gii, c("GII.Rank"="rank", "Country"="country", "Gender.Inequality.Index..GII."="gii", "Maternal.Mortality.Ratio"="matmort", "Adolescent.Birth.Rate"="adolbirth", "Percent.Representation.in.Parliament"="repparl", "Population.with.Secondary.Education..Female."="edu2F", "Population.with.Secondary.Education..Male."="edu2M", "Labour.Force.Participation.Rate..Female."="labF", "Labour.Force.Participation.Rate..Male."="labM"))
names(giinew)
giinew <- mutate(giinew, edu2FM = edu2F/edu2M, labFM = labF/labM)
hd_gii <- inner_join(hdnew, giinew, by = country)
hd_gii <- inner_join(hdnew, giinew, by = "country")
human <- hd_gii
names(human)
dim(human)
write.table(human, file = "human.txt", sep = ";")
read.table("human.txt", header = T, sep = ";")
setwd("C:/Users/Severi/Documents/Open Data/IODS-project/data")
write.table(human, file = "human.txt", sep = ";")
source('~/Open Data/IODS-project/data/create_human.R', echo=TRUE)
