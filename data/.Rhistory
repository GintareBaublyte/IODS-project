setwd("C:/Users/Severi/Documents/Open Data/IODS-project")
write.csv(alc, file = "alcohol.csv", row.names = F)
#Gintare Baublyte
#10.02.2017
#The data is on student alcohol consumption (https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION)
#read datafiles into R
math <- read.csv(file = "student-mat.csv", header = TRUE, sep = ";")
por <- read.csv(file = "student-por.csv", header = TRUE, sep = ";")
#structure of the datasets
str(math)
str(por)
#dimensions fo the datasets
dim(math)
dim(por)
#access dplyr library
library(dplyr)
#common columns to use as identifiers
join_by <- (c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
# join the two datasets by the selected identifiers
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
#explore the structure and dimensions of the joined data
str(math_por)
dim(math_por)
#combine duplicated answers in the joined data
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
#create a new column alc_use
#by averaging the answers related to weekday and weekend alcohol consumption
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
#create a new logical column high_use
#with is TRUE for students for which alc_use is greater than 2
#and FALSE otherwise
alc <- mutate(alc, high_use = alc_use > 2)
#glimpse at the joined and modified data
glimpse(alc)
#save the joined and modified dataset
setwd("C:/Users/Severi/Documents/Open Data/IODS-project")
write.csv(alc, file = "alcohol.csv", row.names = F)
math <- read.csv(file = "student-mat.csv", header = TRUE, sep = ";")
por <- read.csv(file = "student-por.csv", header = TRUE, sep = ";")
str(math)
str(por)
dim(math)
dim(por)
library(dplyr)
math <- read.csv(file = "student-mat.csv", header = TRUE, sep = ";")
#Gintare Baublyte
#10.02.2017
#The data is on student alcohol consumption (https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION)
#read datafiles into R
setwd("C:/Users/Severi/Documents/Open Data/IODS-project"/data)
math <- read.csv(file = "student-mat.csv", header = TRUE, sep = ";")
por <- read.csv(file = "student-por.csv", header = TRUE, sep = ";")
#structure of the datasets
str(math)
str(por)
#dimensions fo the datasets
dim(math)
dim(por)
#access dplyr library
library(dplyr)
#common columns to use as identifiers
join_by <- (c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
# join the two datasets by the selected identifiers
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
#explore the structure and dimensions of the joined data
str(math_por)
dim(math_por)
#combine duplicated answers in the joined data
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
#create a new column alc_use
#by averaging the answers related to weekday and weekend alcohol consumption
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
#create a new logical column high_use
#with is TRUE for students for which alc_use is greater than 2
#and FALSE otherwise
alc <- mutate(alc, high_use = alc_use > 2)
#glimpse at the joined and modified data
glimpse(alc)
#save the joined and modified dataset
setwd("C:/Users/Severi/Documents/Open Data/IODS-project")
write.csv(alc, file = "alcohol.csv", row.names = F)
setwd("C:/Users/Severi/Documents/Open Data/IODS-project"/data)
setwd("C:/Users/Severi/Documents/Open Data/IODS-project"/data)
#Gintare Baublyte
#10.02.2017
#The data is on student alcohol consumption (https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION)
#read datafiles into R
setwd("C:/Users/Severi/Documents/Open Data/IODS-project/data")
math <- read.csv(file = "student-mat.csv", header = TRUE, sep = ";")
por <- read.csv(file = "student-por.csv", header = TRUE, sep = ";")
#structure of the datasets
str(math)
str(por)
#dimensions fo the datasets
dim(math)
dim(por)
#access dplyr library
library(dplyr)
#common columns to use as identifiers
join_by <- (c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
# join the two datasets by the selected identifiers
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
#explore the structure and dimensions of the joined data
str(math_por)
dim(math_por)
#combine duplicated answers in the joined data
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- select(two_columns, 1)[[1]]
}
}
#create a new column alc_use
#by averaging the answers related to weekday and weekend alcohol consumption
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
#create a new logical column high_use
#with is TRUE for students for which alc_use is greater than 2
#and FALSE otherwise
alc <- mutate(alc, high_use = alc_use > 2)
#glimpse at the joined and modified data
glimpse(alc)
#save the joined and modified dataset
setwd("C:/Users/Severi/Documents/Open Data/IODS-project")
write.csv(alc, file = "alcohol.csv", row.names = F)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
```{r, echo=FALSE}
setwd("~/Open Data/IODS-project")
```{r, echo=FALSE}
read.csv("alcohol.csv")
?write.table
setwd("C:/Users/Severi/Documents/Open Data/IODS-project")
write.table(alc, file = "alc.txt", sep = ";")
?read.table
read.table("alc.txt", header = T, sep = ";")
```{r, echo=FALSE}
setwd("~/Open Data/IODS-project")
```{r, echo=FALSE}
```{r, echo=FALSE}
?str
read.table("alc.txt", header = T, sep = ";")
read.table("alc.txt", header = T, sep = ";")
setwd("C:/Users/Severi/Documents/Open Data/IODS-project/data")
write.table(alc, file = "alc.txt", sep = ";")
read.table("alc.txt", header = T, sep = ";")
setwd("~/Open Data/IODS-project/data")
read.table("alc.txt", header = T, sep = ";")
alc
alc <- read.table("alc.txt", header = T, sep = ";")
colnames(alc)
library(ggplot2)
library(dplyr)
g1 <- ggplot(alc, aes(x = high_use, y= studytime))
g1
g1 + geom_boxplot(ylab("Weekly study time")) + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes(), ylab("Weekly study time")) + ggtitle("Student weekly study time by alcohol consumption")
library(ggplot2)
g1 + geom_boxplot(aes()) + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes() + xlab("high alcohol consuption") + ylab("Weekly study time")) + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes()) + xlab("high alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g2 <- ggplot(alc, aes(x = high_use, y= studytime))
g2 + geom_bar(aes()) + xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g2 + geom_bar(xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g2 + geom_bar(studytime)
g2 <- ggplot(alc, aes(x= studytime))
g2 + geom_bar(studytime)
g2 <- ggplot(alc, aes(x= studytime))
g2 + geom_bar(studytime)
g2 <- ggplot(alc, aes(x= studytime))
g2 <- ggplot(alc, aes(x = high_use, y = studytime))
g3 <- g2 + geom_point()
g3
g2 + barplot(alc, main = "XXX", col = c("darkblue", "red"))
u
g2 <- ggplot(alc, aes(x = high_use, y= studytime))
g2 + barplot(alc, main = "XXX", col = c("darkblue", "red"))
g1 <- ggplot(alc, aes(x = high_use, y= studytime))
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
plot(alc$high_use, alc$studytime)
barplot(alc$high_use, alc$studytime)
plot(alc$high_use, alc$studytime)
g2 <- ggplot(alc, aes(x = high_use, y= romantic))
g2 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Romantic relationship status") + ggtitle("Romantic relationship status by alcohol consumption")
barplot(alc$high_use, alc$romantic)
plot(alc$high_use, alc$studytime)
g1 <- ggplot(alc, aes(x = high_use, y= famrel))
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Quality of family relationship") + ggtitle("Student weekly study time by alcohol consumption")
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Quality of family relationship") + ggtitle("Student quality of family relationship by alcohol consumption")
g1 <- ggplot(alc, aes(x = high_use, y= studytime))
g1 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Weekly study time") + ggtitle("Student weekly study time by alcohol consumption")
g
g2 <- ggplot(alc, aes(x = high_use, y= famrel))
g2 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Quality of family relationship") + ggtitle("Student quality of family relationship by alcohol consumption")
g3 <- ggplot(alc, aes(x = high_use, y= freetime))
g3 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Free time after school") + ggtitle("Student free time after school by alcohol consumption")
mytable <- xtabs(~high_use+freetime, data=alc)
ftable(mytable)
summary(mytable)
ftable(mytable)
mytable <- xtabs(~high_use+romantic, data=alc)
ftable(mytable)
library(gmodels)
CrossTable(alc$high_use, alc$romantic)
install.packages(gmodels)
library(gmodels)
crosstab(alc$high_use, alc$romantic)
source("http://pcwww.liv.ac.uk/~william/R/crosstab.r")
crosstab(alc$high_use, alc$romantic)
xtabs(alc$high_use, alc$romantic)
counts <- table(alc$high_use, alc$romantic)
barplot(counts, main="Romantic vs high use",
xlab="Relationship status", col=c("darkblue","red"),
legend = rownames(counts))
counts2 <- table(alc$high_use, alc$freetime)
barplot(counts, main="Free time vs high use",
xlab="Free time", col=c("darkblue","red"),
legend = rownames(counts))
counts2 <- table(alc$high_use, alc$freetime)
barplot(counts2, main="Free time vs high use",
xlab="Free time", col=c("darkblue","red"),
legend = rownames(counts))
counts3 <- table(alc$high_use, alc$freetime)
barplot(counts3, main="Free time vs high use",
xlab="high use", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
counts3 <- table(alc$high_use, alc$freetime)
barplot(counts3, main="Free time vs high use",
xlab="high use", col=c("darkblue","red"),
legend = rownames(counts3), beside=TRUE)
counts3 <- table(alc$high_use, alc$freetime)
barplot(counts3, main="Free time vs high use",
xlab="free time", col=c("darkblue","red"),
legend = rownames(counts3), beside=TRUE)
p1 <- ggplot(alc, aes(x = high_use, y = freetime, col = romantic))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
colnames(alc)
str(alc)
dim(alc)
colnames(alc)
str(alc)
dim(alc)
summary(alc$studytime)
str(studytime)
str("studytime"")
summary(alc$studytime)
str("studytime")
structure("studytime")
structure(studytime)
studytime
colnames(alc$studytime)
colnames(studytime)
col(studytime)
summary(alc$studytime)
counts_studytime <- table(alc$high_use, alc$studytime)
barplot(counts_studytime, main="Study time vs high use",
xlab="Study time", col=c("darkblue","red"),
legend = rownames(counts3), beside=TRUE)
table_studytime <- xtabs(~high_use+studytime, data=alc)
ftable(table_studytime)
table_studytime <- xtabs(~high_use+studytime+freetime, data=alc)
ftable(table_studytime)
table_studytime <- xtabs(~high_use+studytime, data=alc)
ftable(table_studytime)
summary(alc$romantic)
table_romantic <- xtabs(~high_use+romantic, data=alc)
ftable(table_romantic)
81/(180+81)
33/(88+33)
81/(180+81)
33/(88+33)
81/(180+81)*100
33/(88+33)*100
NT = 81/(180+81)*100
NT <- 81/(180+81)*100
TT <- 33/(88+33)*100
counts_romantic <- table(alc$high_use, alc$romantic)
barplot(counts_romantic, main="Relationship status vs high use",
xlab="Relationship status", col=c("darkblue","red"),
legend = rownames(counts_romantic))
summary(alc$famrel)
table_famrel <- xtabs(~high_use+famrel, data=alc)
ftable(table_famrel)
g2 <- ggplot(alc, aes(x = high_use, y= famrel))
g2 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Quality of family relationship") + ggtitle("Student quality of family relationship by alcohol consumption")
summary(alc$alc)
summary(alc$age)
p1 <- ggplot(alc, aes(x = high_use, y = age))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's alcohol consumption versus their age")
p4
g3 <- ggplot(alc, aes(x = high_use, y= age))
g3 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Age") + ggtitle("Students' age by alcohol consumption")
counts_age <- table(alc$high_use, alc$age)
barplot(counts_age, main="Student's age and alcohol consumption",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts_age))
g3 <- ggplot(alc, aes(x = high_use, y= age))
g3 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Age") + ggtitle("Students' age by alcohol consumption")
plot(high_use, age, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
lot(alc$high_use, alc$age, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(alc$high_use, alc$age, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
table_age <- xtabs(~high_use+age, data=alc)
ftable(table_age)
m <- glm(high_use ~ studytime + romantic + famrel + age, data = alc, family = "binomial")
m <- glm(high_use ~ studytime + romantic + famrel + age, data = alc, family = "binomial")
summary(m)
coef(m)
summary(alc$freetime)
table_freetime <- xtabs(~high_use+freetime, data=alc)
ftable(table_freetime)
g4 <- ggplot(alc, aes(x = high_use, y= freetime))
g4 + geom_boxplot(aes()) + xlab("High alcohol consuption") + ylab("Free time after school") + ggtitle("Students' free time after school by alcohol consumption")
counts_freetime <- table(alc$high_use, alc$freetime)
barplot(counts_freetime, main="Freetime vs high use",
xlab="Free time", col=c("darkblue","red"),
legend = rownames(counts_freetime))
m <- glm(high_use ~ studytime + romantic + famrel + age, data = alc, family = "binomial")
summary(m)
coef(m)
m <- glm(high_use ~ studytime + freetime + famrel + age, data = alc, family = "binomial")
summary(m)
coef(m)
qchisq(0.95, 4)
m <- glm(high_use ~ studytime + freetime + famrel + age, data = alc, family = "binomial")
summary(m)
qchisq(0.95, 4)
m <- glm(high_use ~ studytime + freetime + famrel, data = alc, family = "binomial")
summary(m)
qchisq(0.95, 4)
m <- glm(high_use ~ studytime + freetime + famrel + age, data = alc, family = "binomial")
summary(m)
qchisq(0.95, 4)
m <- glm(high_use ~ studytime + freetime + famrel + age, data = alc, family = "binomial")
summary(m)
qchisq(0.95, 377)
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction)
gprob <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
gprob + geom_point()
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table() %>% addmargins()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
``{r, echo=TRUE}
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = nrow(alc))
10 fold:   cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = nrow(alc))
10 fold:   cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
?predict
m <- glm(high_use ~ studytime + freetime + famrel + age, data = alc, family = "binomial")
summary(m)
qchisq(0.95, 377)
